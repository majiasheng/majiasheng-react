{"version":3,"sources":["pages/about/About.js","pages/art/themes/precarious.js","pages/art/themes/pedestal.js","pages/art/ArtDisplay.js","pages/art/Art.js","pages/includes/cssClasses.js","pages/home/Home.js","pages/note/Note.js","pages/work/projects.js","pages/work/WorkDisplay.js","pages/work/Work.js","routes.js","pages/includes/NavBar.js","pages/includes/Console.js","App.js","serviceWorker.js","index.js"],"names":["About","className","precarious","imageLocation","note","date","pedestal","ArtDisplay","artThemeName","artThemeValue","Art","props","path","useRouteMatch","links","routes","useEffect","setNumOfSelectableItems","Object","entries","themes","length","index","map","key","value","push","indexOfSelectableItem","to","artThemeValues","exact","Home","id","Note","twitterClone","name","link","techStack","desc","dateOrStatus","trackMe","thumbNail","reverseGerrymandering","images","location","lawnMower","fb","jcd","WorkDisplay","work","Work","projects","NUMBER_OF_ROUTES","NavBar","indexOfNavItem","getNavItemSelectedClass","indexOfSelectedRoute","isMenuOpened","routesJSX","route","onMouseEnter","handleMouseSelectNavItem","withRouter","onClick","handleUpArrowOnClick","handleDownArrowOnClick","handleSelectOnClick","history","handleBOnClick","App","useState","setIsMenuOpened","setIndexOfSelectedRoute","numOfSelectableItems","setIndexOfSelectableItem","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a25a43e2.chunk.js","sourcesContent":["import React from 'react';\nimport './About.css';\n\nfunction About() {\n  return (\n    <div className=\"About\">\n      <p>\n        Hello world!\n      </p>\n      <p>\n        My name is Jia Sheng Ma.\n        {/* <span role=\"img\" aria-label=\"name-info\">ℹ️</span> */}\n      </p>\n      <p>\n        I write code and solve problems.\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n","const precarious = [\n  {\n    imageLocation: '',\n    note: 'precarious #1',\n    date: '2017-12-01'\n  }\n];\n\nexport default precarious;","const pedestal = [\n  {\n    imageLocation: '',\n    note: 'pedestal #1',\n    date: '2017-12-01'\n  }\n];\n\nexport default pedestal;","import React from 'react';\n\n/**\n * artThemeValue = [\n *  {\n *      imageLocation: '',\n *      note: 'pedestal #1',\n *      date: '2017-12-01'\n *  }, ...\n * ]\n */\nfunction ArtDisplay({ artThemeName, artThemeValue }) {\n\n    return (\n        <div className=\"ArtDisplay\">\n            <h4>{artThemeName}</h4>\n            <div className=\"art-display-body\">\n                coming soon\n            </div>\n        </div>\n    );\n}\n\nexport default ArtDisplay;\n","import React, { useEffect } from 'react';\nimport {\n    Switch,\n    Route,\n    Link,\n    useRouteMatch\n  } from \"react-router-dom\";\nimport * as themes from './themes';\nimport {\n    SELECTED_ITEM\n} from '../includes/cssClasses'; \nimport ArtDisplay from './ArtDisplay';\n\nfunction Art(props) {\n    let { path } = useRouteMatch();\n    let links = [];\n    let routes = [];\n\n    useEffect(() => {\n        props.setNumOfSelectableItems(Object.entries(themes).length);\n        return () => {\n            props.setNumOfSelectableItems(0);\n        }\n    })\n\n    let index = 0;\n    Object.entries(themes).map( ([key,value]) => {\n            links.push(\n                <li\n                    key={`link_${key}`}\n                    className={`${props.indexOfSelectableItem === index ? SELECTED_ITEM: ''}`}\n                >\n                    <Link to={`${path}/${key}`}>• {key}</Link>\n                </li>\n            )\n            routes.push(\n                <Route path={`${path}/${key}`} key={`route_${key}`} >\n                    <ArtDisplay \n                        artThemeName={key}\n                        artThemeValues={value}\n                    />\n                </Route>\n            )\n            index++;\n        }\n    )\n\n    routes.push(\n        <Route path={`${path}/*`} key={`route_404`} >\n            404\n        </Route>\n    )\n\n    return (\n        <div className=\"Art\">\n            <Switch>\n                <Route exact path={path}>\n                    <h3>Art - The Explicables and Inexplicables</h3>\n                    <ul className=\"inline-block\">\n                        {links}\n                    </ul>\n                </Route>\n\n                {routes}\n                \n            </Switch>\n        </div>\n    );\n}\n\nexport default Art;\n","export const HIDDEN = 'hidden';\nexport const VISIBLE = 'visible';\nexport const SELECTED_ITEM = 'selected-item';","import React from 'react';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <div className=\"typewriter\">\n        <h3 id=\"hello-world\">&gt; Hello World!</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction Note() {\n  return (\n    <div className=\"Note\">\n        <h3>Note</h3>\n    </div>\n  );\n}\n\nexport default Note;\n","\nexport default {\n  // trp: {\n  //   name: 'The Root Project',\n  //   id:'trp',\n  //   link: '',\n  //   techStack: ['Python', 'MySQL'],\n  //   dateOrStatus: 'On-going (stalling)',\n  //   desc: 'An effort to collect learning topics and present them in a hierachical order (top-down) to show overviews of topics.'\n  // },\n  twitterClone: {\n    name: 'Twitter Clone',\n    id: 'twitter-clone',\n    link: '',\n    techStack:  ['Nginx', 'NodeJs', 'MongoDB', 'Cassandra', 'RabbitMQ'],\n    desc: 'Able to withstand over one million read/write requests per hour given limited resources.',\n    dateOrStatus: '03/2018 -- 05/2018'\n  },\n  trackMe: {\n    name: 'TrackMe',\n    id: 'track-me',\n    link: '',\n    techStack:  ['Android', 'Java'],\n    thumbNail: '@/../static/images/projects/trackMe/route-traveled.png',\n    desc: 'Android application that can track travel itinerary and provide route predictions.',\n    dateOrStatus: '05/2018',\n  },\n  reverseGerrymandering: {\n    name: 'Reverse Gerrymandering',\n    id: 'reverse-gerrymandering',\n    link: '',\n    techStack: ['Java', 'SpringMVC', 'MySQL', 'JPA'],\n    dateOrStatus: '09/2017 -- 12/2017',\n    thumbNail: '@/../static/images/projects/rgm/1.png',\n    desc: 'Gerrymandering is the manipulation of district boundaries to provide political advantage to a party.<br>This tool uses demographic, geospatial and election data and employs various metrics to analyze whether a voting district has been gerrymandered.',\n    images: [\n      {\n        location: '@/../static/images/projects/rgm/1.png',\n        name: 'home'\n      },\n      {\n        location: '@/../static/images/projects/rgm/2.png',\n        name: 'ny-2016'\n      },\n      {\n        location: '@/../static/images/projects/rgm/3.png',\n        name: 'ny-2016-efficiency-gap-test'\n      },\n      {\n        location: '@/../static/images/projects/rgm/4.png',\n        name: 'super-districting'\n      },\n    ]\n  },\n  lawnMower: {\n    name: 'Lawn Mower',\n    id:'lawn-mower',\n    link: '',\n    techStack: ['MIPS Assembly'],\n    dateOrStatus: '11/2015',\n    desc: 'MS-DOS style game written in MISP assembly.<br>Gotta keep the lawn well groomed. 🐮',\n    thumbNail: '@/../static/images/projects/lmw/1.gif',\n    images: [\n      {\n        location: '@/../static/images/projects/lmw/1.gif',\n        name: 'hi'\n      },\n      {\n        location: '@/../static/images/projects/lmw/1.png',\n        name: 'map'\n      }\n    ]\n  },\n  fb: {\n    name: 'Facebook Clone',\n    id:'fb',\n    link: '',\n    techStack: ['Linux', 'MySQL', 'Apache', 'PHP'],\n    dateOrStatus: '07/2017-08/2017',\n    thumbNail: '@/../static/images/projects/fb/1.png',\n    desc: '',\n    images: [\n      {\n        location: '@/../static/images/projects/fb/1.png',\n        name: 'home'\n      },\n      {\n        location: '@/../static/images/projects/fb/2.png',\n        name: 'profile'\n      }\n    ]\n  },\n  jcd: {\n    name: 'JClassDesigner',\n    id:'jcd',\n    link: '',\n    techStack: ['Java'],\n    dateOrStatus: '03/2016 -- 05/2016',\n    desc: 'A simplified version of <a style=\"color: violet;\" href=\"http://alexdp.free.fr/violetumleditor/page.php?id=en:tour\" target=\"_blank\" id=\"violet-uml-link\">Violet UML Editor</a>. It can generate compilable java skeleton code from the UML design. ',\n    thumbNail: '@/../static/images/projects/jcd/1.png',\n    images: [\n      {\n        location: '@/../static/images/projects/jcd/1.png',\n        name: 'add-subclass'\n      },\n      {\n        location: '@/../static/images/projects/jcd/2.png',\n        name: 'export-code'\n      },\n      {\n        location: '@/../static/images/projects/jcd/3.png',\n        name: 'exported-code1'\n      },\n      {\n        location: '@/../static/images/projects/jcd/4.png',\n        name: 'exported-code2'\n      },\n    ]\n  }\n}","import React from 'react';\n\n/**\n * work: { \n *      name: 'Twitter Clone',\n *      id: 'twitter-clone',\n *      link: '',\n *      techStack:  ['Nginx', 'NodeJs', 'MongoDB', 'Cassandra', 'RabbitMQ'],\n *      desc: 'Able to withstand over one million read/write requests per hour given limited resources.',\n *      dateOrStatus: '03/2018 -- 05/2018'\n * }\n */\nfunction WorkDisplay({ work }) {\n\n    return (\n        <div className=\"WorkDisplay\">\n            <h4>{work.name}</h4>\n            <div className=\"work-display-body\">\n                Coming soon\n            </div>\n        </div>\n    );\n}\n\nexport default WorkDisplay;\n","import React from 'react';\nimport projects from './projects';\nimport {\n    Switch,\n    Route,\n    Link,\n    useRouteMatch\n} from \"react-router-dom\";\nimport WorkDisplay from './WorkDisplay';\n\nfunction Work() {\n    let { path } = useRouteMatch();\n    let links = [];\n    let routes = [];\n\n    Object.entries(projects).map( ([key, value]) => {\n            links.push(\n                <li key={`link_${key}`}>\n                    <Link to={`${path}/${value.id}`}>• {value.name}</Link>\n                </li>\n            )\n            routes.push(\n                <Route path={`${path}/${value.id}`} key={`route_${key}`} >\n                    <WorkDisplay\n                        work={value}\n                    />\n                </Route>\n            )\n        }\n    )\n    routes.push(\n        <Route path={`${path}/*`} key={`route_404`} >\n            404\n        </Route>\n    )\n\n    return (\n        <div className=\"Work\">\n            <Switch>\n                <Route exact path={path}>\n                    <h3>Projects and work items</h3>\n                    <ul>\n                        {links}\n                    </ul>\n                </Route>\n\n                {routes}\n                \n            </Switch>\n        </div>\n    );\n}\n\nexport default Work;\n","export const routes = [\n    {path: '/', name: 'Home'},\n    {path: '/about', name: 'About'},\n    {path: '/art', name: 'Art'},\n    {path: '/work', name: 'Work'},\n    {path: '/note', name: 'Note'},\n];\n\nexport const NUMBER_OF_ROUTES = routes.length;","import React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport './NavBar.css';\nimport {\n  VISIBLE,\n  HIDDEN,\n  SELECTED_ITEM\n} from './cssClasses';\nimport { routes } from '../../routes';\n\nfunction NavBar(props) {\n  const getNavBarVisibilityClass = () => props.isMenuOpened ? VISIBLE : HIDDEN;\n  const getNavItemVisibilityClass = (indexOfNavItem) => {\n    if (props.indexOfSelectedRoute === indexOfNavItem && props.isMenuOpened)\n      return VISIBLE;\n    return HIDDEN;\n  }\n  const getNavItemSelectedClass = (indexOfNavItem) => {\n    if (props.indexOfSelectedRoute === indexOfNavItem && props.isMenuOpened)\n      return SELECTED_ITEM;\n  }\n  const routesJSX = [];\n\n  for (let [index, route] of routes.entries()) {\n    routesJSX.push(\n      <li\n        key={`${route.name}`}\n        className={getNavItemSelectedClass(index)}\n        onMouseEnter={props.handleMouseSelectNavItem(index)}\n      > \n        <Link to={route.path}>\n          <span \n            className={`greater-than ${getNavItemVisibilityClass(index)}`}\n          >\n            <span>&gt;</span>\n          </span>\n          {route.name}\n        </Link>\n      </li>\n    );\n  }\n\n  return (\n    <div className={`NavBar menu ${getNavBarVisibilityClass()}`}>\n        <ul id=\"nav-items\">{routesJSX}</ul>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { routes } from '../../routes';\nimport { withRouter } from \"react-router-dom\";\n\n\nfunction Console(props) {\n\n    const handleEnterOnClick = () => {\n        if (props.isMenuOpened)\n            props.history.push(routes[props.indexOfSelectedRoute].path);\n    }\n    return (\n        <div className=\"console\">\n            <div className=\"up\">\n                <span\n                    className=\"console-item direction-button\"\n                    onClick={props.handleUpArrowOnClick}\n                >\n                    ⬆︎\n                </span>\n            </div>\n            <div className=\"right\"><span className=\"console-item direction-button\">➽</span></div>\n            <div className=\"left\"><span className=\"console-item direction-button\">☚</span></div>\n            <div className=\"down\">\n                <span\n                    className=\"console-item direction-button\"\n                    onClick={props.handleDownArrowOnClick}\n                >\n                    ⟱\n                </span>\n            </div>\n            <div className=\"select\">\n                <span \n                    className=\"console-item control-button\"\n                    onClick={props.handleSelectOnClick}\n                >\n                    SELECT\n                </span>\n            </div>\n            <div className=\"enter\">\n                <span\n                    className=\"console-item control-button\"\n                    onClick={handleEnterOnClick}\n                >\n                    ENTER\n                </span>\n            </div>\n            <div className=\"A\"><span className=\"console-item action-button\">A</span></div>\n            <div className=\"B\">\n                <span\n                    className=\"console-item action-button\"\n                    onClick={props.handleBOnClick}\n                >\n                    B\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Console);\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport {\n  About,\n  Art,\n  Home,\n  Note,\n  Work,\n  NavBar,\n  Console\n} from './pages';\nimport './App.css';\nimport { NUMBER_OF_ROUTES } from './routes';\n\n\nfunction App() {\n  const [isMenuOpened, setIsMenuOpened] = useState(false);\n  const [indexOfSelectedRoute, setIndexOfSelectedRoute] = useState(0);\n  const [numOfSelectableItems, setNumOfSelectableItems] = useState(0);  /* doubles as indicator of arrow selectable items on the screen */\n  const [indexOfSelectableItem, setIndexOfSelectableItem] = useState(0);\n  const closeMenu = () => setIsMenuOpened(false);\n  const openMenu = () => setIsMenuOpened(true);\n  const handleSelectOnClick = () => {\n    if (!isMenuOpened) {\n      openMenu();\n    } else {\n      setIndexOfSelectedRoute((indexOfSelectedRoute+1)%NUMBER_OF_ROUTES);\n    }\n  }\n  const handleBOnClick = () => {\n    if (isMenuOpened) {\n      closeMenu();\n      setIndexOfSelectedRoute(0);\n    }\n  }\n  const handleMouseSelectNavItem = (index) => () => {\n    if(isMenuOpened)\n      setIndexOfSelectedRoute(index);\n  }\n  const handleUpArrowOnClick = () => {\n    if(!isMenuOpened && numOfSelectableItems > 0) {\n      /* + numOfSelectableItems because negative number mod positive number will return negative */\n      setIndexOfSelectableItem((indexOfSelectableItem-1+numOfSelectableItems)%numOfSelectableItems);\n    }\n  }\n  const handleDownArrowOnClick = () => {\n    if(!isMenuOpened && numOfSelectableItems > 0)\n      setIndexOfSelectableItem((indexOfSelectableItem+1)%numOfSelectableItems);\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"container\">\n          <div className=\"content\">\n                <Switch>\n                  <Route exact path=\"/\">\n                    <Home\n                      setNumOfSelectableItems={setNumOfSelectableItems}\n                    />\n                  </Route>\n                  <Route path=\"/about\">\n                    <About\n                      setNumOfSelectableItems={setNumOfSelectableItems}\n                    />\n                  </Route>\n                  <Route path=\"/art\">\n                    <Art\n                      setNumOfSelectableItems={setNumOfSelectableItems}\n                      indexOfSelectableItem={indexOfSelectableItem}\n                    />\n                  </Route>\n                  <Route path=\"/note\">\n                    <Note\n                      setNumOfSelectableItems={setNumOfSelectableItems}\n                    />\n                  </Route>\n                  <Route path=\"/work\">\n                    <Work\n                      setNumOfSelectableItems={setNumOfSelectableItems}\n                    />\n                  </Route>\n                  <Route path=\"*\"> 404 </Route>\n                </Switch>\n          </div>\n        </div>\n\n        {/* <div className=\"banner\">\n          majiasheng\n        </div> */}\n\n        <div className=\"console-wrapper\">\n          <NavBar\n            isMenuOpened={isMenuOpened}\n            indexOfSelectedRoute={indexOfSelectedRoute}\n            handleMouseSelectNavItem={handleMouseSelectNavItem}\n          />\n          <Console\n            indexOfSelectedRoute={indexOfSelectedRoute}\n            handleSelectOnClick={handleSelectOnClick}\n            handleBOnClick={handleBOnClick}\n            isMenuOpened={isMenuOpened}\n            handleUpArrowOnClick={handleUpArrowOnClick}\n            handleDownArrowOnClick={handleDownArrowOnClick}\n          />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}